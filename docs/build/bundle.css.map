{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../RandomVm.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport RandomVm from \"./RandomVm.svelte\"\n</script>\n\n<main>\n\t<div class=\"main-section\">\n\t\t<RandomVm />\n\t</div>\n\t<footer><a href=\"https://github.com/bmlt-enabled/randomvm/issues\" target=\"_blank\">Ideas?</a> | Meetings are sourced from <a href=\"https://virtual-na.org/meetings\" target=\"_blank\">https://virtual-na.org/meetings</a></footer>\n</main>\n\n<style>\n\tmain {\n\t\twidth: 95vw;\n\t}\n\n\t.main-section {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\talign-content: center;\n\t\tjustify-content: center;\n\t}\n\tp{\n\t\ttext-align: center;\n\t}\n\tfooter {\n\t\ttext-align: center;\n\t}\n</style>",
    "<script>\n    import moment from 'moment-timezone';\n    import fetchJsonp from 'fetch-jsonp';\n\n    export let randomMeeting = [];\n    export let buttonTxt = \"Get A Random Meeting\";\n    export let currentlyRefreshing = false\n\n    function getAdjustedDateTime(meeting_day, meeting_time, meeting_time_zone) {\n        let adjustedMeetingDay = parseInt(meeting_day) === 1 ? 7 : parseInt(meeting_day) - 1\n        let meeting_date_time_obj;\n\n        if (!meeting_time_zone) {\n            meeting_time_zone = \"UTC\";\n        }\n\n        // Get an object that represents the meeting in its time zone\n        meeting_date_time_obj = moment.tz(meeting_time_zone).set({\n            hour: meeting_time.split(\":\")[0],\n            minute: meeting_time.split(\":\")[1],\n            second: 0\n        }).isoWeekday(adjustedMeetingDay);\n\n        // Convert meeting to target (local) time zone\n        meeting_date_time_obj = meeting_date_time_obj.clone().tz(moment.tz.guess());\n\n        let now = moment.tz(moment.tz.guess())\n        if (now > meeting_date_time_obj) {\n            meeting_date_time_obj.add(1, 'weeks');\n        }\n\n        return meeting_date_time_obj;\n    }\n\n    function getRandomMeeting() {\n        buttonTxt = \"Finding Meeting...\"\n        currentlyRefreshing = true\n        fetchJsonp('https://bmlt.virtual-na.org/main_server/client_interface/jsonp/?switcher=GetSearchResults&data_field_key=weekday_tinyint,start_time,time_zone,meeting_name,comments')\n            .then((response) => response.json())\n            .then((meetings) => {\n                let results = [];\n                if (meetings) {\n                    for (let x in meetings) {\n                        let meeting_day = meetings[x]['weekday_tinyint'];\n                        let meeting_time = meetings[x]['start_time'];\n                        let meeting_time_zone = meetings[x]['time_zone'];\n                        let start = getAdjustedDateTime(meeting_day, meeting_time, meeting_time_zone);\n                        let now = moment.tz(moment.tz.guess());\n                        if (start.diff(now, 'minutes') >= 0 && start.diff(now, 'minutes') <= 30) {\n                            results.push(\n                                {\n                                    name: meetings[x]['meeting_name'],\n                                    start: start._d.toString(),\n                                    link: meetings[x]['comments'],\n                                    time: meeting_time,\n                                    time_zone: meeting_time_zone\n                                });\n                        }\n                    }\n                }\n                console.log(results)\n                randomMeeting = results[Math.floor(Math.random() * results.length)]\n                buttonTxt = \"Get A Random Meeting\"\n                currentlyRefreshing = false\n            })\n            .catch((ex) => console.log('parsing failed', ex));\n    }\n</script>\n\n<main>\n    <div class=\"meeting-button\">\n        <button on:click={getRandomMeeting} disabled={currentlyRefreshing}>{buttonTxt}</button>\n    </div>\n    <br />\n        {#if Object.keys(randomMeeting).length > 0}\n            <div class=\"meeting\">\n                <b>{randomMeeting.name}</b> <br />\n                {randomMeeting.start}<br />\n                <a href=\"{randomMeeting.link}\">{randomMeeting.link}</a>\n            </div>\n        {/if}\n    <br />\n</main>\n\n<style>\n    .meeting-button {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    .meeting {\n        font-size: 16px;\n        text-align: center\n    }\n    .meeting a {\n        font-size: 14px;\n    }\n    main {\n        margin: 2vh 1vw;\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAYC,IAAI,eAAC,CAAC,AACL,KAAK,CAAE,IAAI,AACZ,CAAC,AAED,aAAa,eAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,MAAM,CACrB,eAAe,CAAE,MAAM,AACxB,CAAC,AAID,MAAM,eAAC,CAAC,AACP,UAAU,CAAE,MAAM,AACnB,CAAC;AC0DE,eAAe,4BAAC,CAAC,AACb,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACvB,CAAC,AACD,QAAQ,4BAAC,CAAC,AACN,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM;IACtB,CAAC,AACD,sBAAQ,CAAC,CAAC,cAAC,CAAC,AACR,SAAS,CAAE,IAAI,AACnB,CAAC,AACD,IAAI,4BAAC,CAAC,AACF,MAAM,CAAE,GAAG,CAAC,GAAG,AACnB,CAAC"
}